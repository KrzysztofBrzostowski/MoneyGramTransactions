//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UiCommon.MoneyGramWebServiceClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MoneyGramWebServiceClient.IMoneyGramWebService")]
    public interface IMoneyGramWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyGramWebService/GetCurrencies", ReplyAction="http://tempuri.org/IMoneyGramWebService/GetCurrenciesResponse")]
        Model.Currency[] GetCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyGramWebService/GetCurrencies", ReplyAction="http://tempuri.org/IMoneyGramWebService/GetCurrenciesResponse")]
        System.Threading.Tasks.Task<Model.Currency[]> GetCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyGramWebService/SaveTransaction", ReplyAction="http://tempuri.org/IMoneyGramWebService/SaveTransactionResponse")]
        string SaveTransaction(string currencySymbol, string customerName, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyGramWebService/SaveTransaction", ReplyAction="http://tempuri.org/IMoneyGramWebService/SaveTransactionResponse")]
        System.Threading.Tasks.Task<string> SaveTransactionAsync(string currencySymbol, string customerName, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyGramWebService/SaveError", ReplyAction="http://tempuri.org/IMoneyGramWebService/SaveErrorResponse")]
        void SaveError(Model.Custom.CustomErrorException exception);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyGramWebService/SaveError", ReplyAction="http://tempuri.org/IMoneyGramWebService/SaveErrorResponse")]
        System.Threading.Tasks.Task SaveErrorAsync(Model.Custom.CustomErrorException exception);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMoneyGramWebServiceChannel : UiCommon.MoneyGramWebServiceClient.IMoneyGramWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoneyGramWebServiceClient : System.ServiceModel.ClientBase<UiCommon.MoneyGramWebServiceClient.IMoneyGramWebService>, UiCommon.MoneyGramWebServiceClient.IMoneyGramWebService {
        
        public MoneyGramWebServiceClient() {
        }
        
        public MoneyGramWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MoneyGramWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MoneyGramWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MoneyGramWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Model.Currency[] GetCurrencies() {
            return base.Channel.GetCurrencies();
        }
        
        public System.Threading.Tasks.Task<Model.Currency[]> GetCurrenciesAsync() {
            return base.Channel.GetCurrenciesAsync();
        }
        
        public string SaveTransaction(string currencySymbol, string customerName, decimal amount) {
            return base.Channel.SaveTransaction(currencySymbol, customerName, amount);
        }
        
        public System.Threading.Tasks.Task<string> SaveTransactionAsync(string currencySymbol, string customerName, decimal amount) {
            return base.Channel.SaveTransactionAsync(currencySymbol, customerName, amount);
        }
        
        public void SaveError(Model.Custom.CustomErrorException exception) {
            base.Channel.SaveError(exception);
        }
        
        public System.Threading.Tasks.Task SaveErrorAsync(Model.Custom.CustomErrorException exception) {
            return base.Channel.SaveErrorAsync(exception);
        }
    }
}
